/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as IndexImport } from './routes/index'
import { Route as AuthResetPasswordImport } from './routes/_auth/reset-password'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AppSettingsRouteImport } from './routes/_app/settings/route'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard/route'
import { Route as AppTouristAttractionIndexImport } from './routes/_app/tourist-attraction/index'
import { Route as AppPoliticalSitesIndexImport } from './routes/_app/political-sites/index'
import { Route as AppHotelsIndexImport } from './routes/_app/hotels/index'
import { Route as AppTouristAttractionAddImport } from './routes/_app/tourist-attraction/add'
import { Route as AppSettingsProfileImport } from './routes/_app/settings/profile'
import { Route as AppSettingsPreferencesImport } from './routes/_app/settings/preferences'
import { Route as AppSettingsPasswordImport } from './routes/_app/settings/password'
import { Route as AppPoliticalSitesAddImport } from './routes/_app/political-sites/add'
import { Route as AppHotelsAddImport } from './routes/_app/hotels/add'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AppSettingsRouteRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)

const AppDashboardRouteRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)

const AppTouristAttractionIndexRoute = AppTouristAttractionIndexImport.update({
  id: '/tourist-attraction/',
  path: '/tourist-attraction/',
  getParentRoute: () => AppRoute,
} as any)

const AppPoliticalSitesIndexRoute = AppPoliticalSitesIndexImport.update({
  id: '/political-sites/',
  path: '/political-sites/',
  getParentRoute: () => AppRoute,
} as any)

const AppHotelsIndexRoute = AppHotelsIndexImport.update({
  id: '/hotels/',
  path: '/hotels/',
  getParentRoute: () => AppRoute,
} as any)

const AppTouristAttractionAddRoute = AppTouristAttractionAddImport.update({
  id: '/tourist-attraction/add',
  path: '/tourist-attraction/add',
  getParentRoute: () => AppRoute,
} as any)

const AppSettingsProfileRoute = AppSettingsProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsPreferencesRoute = AppSettingsPreferencesImport.update({
  id: '/preferences',
  path: '/preferences',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsPasswordRoute = AppSettingsPasswordImport.update({
  id: '/password',
  path: '/password',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppPoliticalSitesAddRoute = AppPoliticalSitesAddImport.update({
  id: '/political-sites/add',
  path: '/political-sites/add',
  getParentRoute: () => AppRoute,
} as any)

const AppHotelsAddRoute = AppHotelsAddImport.update({
  id: '/hotels/add',
  path: '/hotels/add',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_app/hotels/add': {
      id: '/_app/hotels/add'
      path: '/hotels/add'
      fullPath: '/hotels/add'
      preLoaderRoute: typeof AppHotelsAddImport
      parentRoute: typeof AppImport
    }
    '/_app/political-sites/add': {
      id: '/_app/political-sites/add'
      path: '/political-sites/add'
      fullPath: '/political-sites/add'
      preLoaderRoute: typeof AppPoliticalSitesAddImport
      parentRoute: typeof AppImport
    }
    '/_app/settings/password': {
      id: '/_app/settings/password'
      path: '/password'
      fullPath: '/settings/password'
      preLoaderRoute: typeof AppSettingsPasswordImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/settings/preferences': {
      id: '/_app/settings/preferences'
      path: '/preferences'
      fullPath: '/settings/preferences'
      preLoaderRoute: typeof AppSettingsPreferencesImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/settings/profile': {
      id: '/_app/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AppSettingsProfileImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/tourist-attraction/add': {
      id: '/_app/tourist-attraction/add'
      path: '/tourist-attraction/add'
      fullPath: '/tourist-attraction/add'
      preLoaderRoute: typeof AppTouristAttractionAddImport
      parentRoute: typeof AppImport
    }
    '/_app/hotels/': {
      id: '/_app/hotels/'
      path: '/hotels'
      fullPath: '/hotels'
      preLoaderRoute: typeof AppHotelsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/political-sites/': {
      id: '/_app/political-sites/'
      path: '/political-sites'
      fullPath: '/political-sites'
      preLoaderRoute: typeof AppPoliticalSitesIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/tourist-attraction/': {
      id: '/_app/tourist-attraction/'
      path: '/tourist-attraction'
      fullPath: '/tourist-attraction'
      preLoaderRoute: typeof AppTouristAttractionIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppSettingsRouteRouteChildren {
  AppSettingsPasswordRoute: typeof AppSettingsPasswordRoute
  AppSettingsPreferencesRoute: typeof AppSettingsPreferencesRoute
  AppSettingsProfileRoute: typeof AppSettingsProfileRoute
}

const AppSettingsRouteRouteChildren: AppSettingsRouteRouteChildren = {
  AppSettingsPasswordRoute: AppSettingsPasswordRoute,
  AppSettingsPreferencesRoute: AppSettingsPreferencesRoute,
  AppSettingsProfileRoute: AppSettingsProfileRoute,
}

const AppSettingsRouteRouteWithChildren =
  AppSettingsRouteRoute._addFileChildren(AppSettingsRouteRouteChildren)

interface AppRouteChildren {
  AppDashboardRouteRoute: typeof AppDashboardRouteRoute
  AppSettingsRouteRoute: typeof AppSettingsRouteRouteWithChildren
  AppHotelsAddRoute: typeof AppHotelsAddRoute
  AppPoliticalSitesAddRoute: typeof AppPoliticalSitesAddRoute
  AppTouristAttractionAddRoute: typeof AppTouristAttractionAddRoute
  AppHotelsIndexRoute: typeof AppHotelsIndexRoute
  AppPoliticalSitesIndexRoute: typeof AppPoliticalSitesIndexRoute
  AppTouristAttractionIndexRoute: typeof AppTouristAttractionIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRouteRoute: AppDashboardRouteRoute,
  AppSettingsRouteRoute: AppSettingsRouteRouteWithChildren,
  AppHotelsAddRoute: AppHotelsAddRoute,
  AppPoliticalSitesAddRoute: AppPoliticalSitesAddRoute,
  AppTouristAttractionAddRoute: AppTouristAttractionAddRoute,
  AppHotelsIndexRoute: AppHotelsIndexRoute,
  AppPoliticalSitesIndexRoute: AppPoliticalSitesIndexRoute,
  AppTouristAttractionIndexRoute: AppTouristAttractionIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/dashboard': typeof AppDashboardRouteRoute
  '/settings': typeof AppSettingsRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/hotels/add': typeof AppHotelsAddRoute
  '/political-sites/add': typeof AppPoliticalSitesAddRoute
  '/settings/password': typeof AppSettingsPasswordRoute
  '/settings/preferences': typeof AppSettingsPreferencesRoute
  '/settings/profile': typeof AppSettingsProfileRoute
  '/tourist-attraction/add': typeof AppTouristAttractionAddRoute
  '/hotels': typeof AppHotelsIndexRoute
  '/political-sites': typeof AppPoliticalSitesIndexRoute
  '/tourist-attraction': typeof AppTouristAttractionIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/dashboard': typeof AppDashboardRouteRoute
  '/settings': typeof AppSettingsRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/hotels/add': typeof AppHotelsAddRoute
  '/political-sites/add': typeof AppPoliticalSitesAddRoute
  '/settings/password': typeof AppSettingsPasswordRoute
  '/settings/preferences': typeof AppSettingsPreferencesRoute
  '/settings/profile': typeof AppSettingsProfileRoute
  '/tourist-attraction/add': typeof AppTouristAttractionAddRoute
  '/hotels': typeof AppHotelsIndexRoute
  '/political-sites': typeof AppPoliticalSitesIndexRoute
  '/tourist-attraction': typeof AppTouristAttractionIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/dashboard': typeof AppDashboardRouteRoute
  '/_app/settings': typeof AppSettingsRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_app/hotels/add': typeof AppHotelsAddRoute
  '/_app/political-sites/add': typeof AppPoliticalSitesAddRoute
  '/_app/settings/password': typeof AppSettingsPasswordRoute
  '/_app/settings/preferences': typeof AppSettingsPreferencesRoute
  '/_app/settings/profile': typeof AppSettingsProfileRoute
  '/_app/tourist-attraction/add': typeof AppTouristAttractionAddRoute
  '/_app/hotels/': typeof AppHotelsIndexRoute
  '/_app/political-sites/': typeof AppPoliticalSitesIndexRoute
  '/_app/tourist-attraction/': typeof AppTouristAttractionIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/settings'
    | '/login'
    | '/reset-password'
    | '/hotels/add'
    | '/political-sites/add'
    | '/settings/password'
    | '/settings/preferences'
    | '/settings/profile'
    | '/tourist-attraction/add'
    | '/hotels'
    | '/political-sites'
    | '/tourist-attraction'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dashboard'
    | '/settings'
    | '/login'
    | '/reset-password'
    | '/hotels/add'
    | '/political-sites/add'
    | '/settings/password'
    | '/settings/preferences'
    | '/settings/profile'
    | '/tourist-attraction/add'
    | '/hotels'
    | '/political-sites'
    | '/tourist-attraction'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/dashboard'
    | '/_app/settings'
    | '/_auth/login'
    | '/_auth/reset-password'
    | '/_app/hotels/add'
    | '/_app/political-sites/add'
    | '/_app/settings/password'
    | '/_app/settings/preferences'
    | '/_app/settings/profile'
    | '/_app/tourist-attraction/add'
    | '/_app/hotels/'
    | '/_app/political-sites/'
    | '/_app/tourist-attraction/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/dashboard",
        "/_app/settings",
        "/_app/hotels/add",
        "/_app/political-sites/add",
        "/_app/tourist-attraction/add",
        "/_app/hotels/",
        "/_app/political-sites/",
        "/_app/tourist-attraction/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/reset-password"
      ]
    },
    "/_app/dashboard": {
      "filePath": "_app/dashboard/route.tsx",
      "parent": "/_app"
    },
    "/_app/settings": {
      "filePath": "_app/settings/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/settings/password",
        "/_app/settings/preferences",
        "/_app/settings/profile"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/reset-password": {
      "filePath": "_auth/reset-password.tsx",
      "parent": "/_auth"
    },
    "/_app/hotels/add": {
      "filePath": "_app/hotels/add.tsx",
      "parent": "/_app"
    },
    "/_app/political-sites/add": {
      "filePath": "_app/political-sites/add.tsx",
      "parent": "/_app"
    },
    "/_app/settings/password": {
      "filePath": "_app/settings/password.tsx",
      "parent": "/_app/settings"
    },
    "/_app/settings/preferences": {
      "filePath": "_app/settings/preferences.tsx",
      "parent": "/_app/settings"
    },
    "/_app/settings/profile": {
      "filePath": "_app/settings/profile.tsx",
      "parent": "/_app/settings"
    },
    "/_app/tourist-attraction/add": {
      "filePath": "_app/tourist-attraction/add.tsx",
      "parent": "/_app"
    },
    "/_app/hotels/": {
      "filePath": "_app/hotels/index.tsx",
      "parent": "/_app"
    },
    "/_app/political-sites/": {
      "filePath": "_app/political-sites/index.tsx",
      "parent": "/_app"
    },
    "/_app/tourist-attraction/": {
      "filePath": "_app/tourist-attraction/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
