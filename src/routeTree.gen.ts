/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthVerifyOtpRouteImport } from './routes/_auth/verify-otp'
import { Route as AuthResetPasswordRouteImport } from './routes/_auth/reset-password'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as AppDashboardRouteRouteImport } from './routes/_app/dashboard/route'
import { Route as AppUserManagementIndexRouteImport } from './routes/_app/user-management/index'
import { Route as AppTravelBlogsIndexRouteImport } from './routes/_app/travel-blogs/index'
import { Route as AppTouristAttractionIndexRouteImport } from './routes/_app/tourist-attraction/index'
import { Route as AppSettingsIndexRouteImport } from './routes/_app/settings/index'
import { Route as AppPoliticalSitesIndexRouteImport } from './routes/_app/political-sites/index'
import { Route as AppNotificationsIndexRouteImport } from './routes/_app/notifications/index'
import { Route as AppHotelsIndexRouteImport } from './routes/_app/hotels/index'
import { Route as AppUserManagementAddRouteImport } from './routes/_app/user-management/add'
import { Route as AppTravelBlogsAddRouteImport } from './routes/_app/travel-blogs/add'
import { Route as AppTouristAttractionAddRouteImport } from './routes/_app/tourist-attraction/add'
import { Route as AppSettingsSettingsRouteImport } from './routes/_app/settings/_settings'
import { Route as AppPoliticalSitesAddRouteImport } from './routes/_app/political-sites/add'
import { Route as AppNotificationsAddRouteImport } from './routes/_app/notifications/add'
import { Route as AppHotelsAddRouteImport } from './routes/_app/hotels/add'
import { Route as AppSettingsSettingsProfileRouteImport } from './routes/_app/settings/_settings/profile'
import { Route as AppSettingsSettingsPreferencesRouteImport } from './routes/_app/settings/_settings/preferences'
import { Route as AppSettingsSettingsPasswordRouteImport } from './routes/_app/settings/_settings/password'

const AppSettingsRouteImport = createFileRoute('/_app/settings')()

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AuthVerifyOtpRoute = AuthVerifyOtpRouteImport.update({
  id: '/verify-otp',
  path: '/verify-otp',
  getParentRoute: () => AuthRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AppDashboardRouteRoute = AppDashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)
const AppUserManagementIndexRoute = AppUserManagementIndexRouteImport.update({
  id: '/user-management/',
  path: '/user-management/',
  getParentRoute: () => AppRoute,
} as any)
const AppTravelBlogsIndexRoute = AppTravelBlogsIndexRouteImport.update({
  id: '/travel-blogs/',
  path: '/travel-blogs/',
  getParentRoute: () => AppRoute,
} as any)
const AppTouristAttractionIndexRoute =
  AppTouristAttractionIndexRouteImport.update({
    id: '/tourist-attraction/',
    path: '/tourist-attraction/',
    getParentRoute: () => AppRoute,
  } as any)
const AppSettingsIndexRoute = AppSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppSettingsRoute,
} as any)
const AppPoliticalSitesIndexRoute = AppPoliticalSitesIndexRouteImport.update({
  id: '/political-sites/',
  path: '/political-sites/',
  getParentRoute: () => AppRoute,
} as any)
const AppNotificationsIndexRoute = AppNotificationsIndexRouteImport.update({
  id: '/notifications/',
  path: '/notifications/',
  getParentRoute: () => AppRoute,
} as any)
const AppHotelsIndexRoute = AppHotelsIndexRouteImport.update({
  id: '/hotels/',
  path: '/hotels/',
  getParentRoute: () => AppRoute,
} as any)
const AppUserManagementAddRoute = AppUserManagementAddRouteImport.update({
  id: '/user-management/add',
  path: '/user-management/add',
  getParentRoute: () => AppRoute,
} as any)
const AppTravelBlogsAddRoute = AppTravelBlogsAddRouteImport.update({
  id: '/travel-blogs/add',
  path: '/travel-blogs/add',
  getParentRoute: () => AppRoute,
} as any)
const AppTouristAttractionAddRoute = AppTouristAttractionAddRouteImport.update({
  id: '/tourist-attraction/add',
  path: '/tourist-attraction/add',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsSettingsRoute = AppSettingsSettingsRouteImport.update({
  id: '/_settings',
  getParentRoute: () => AppSettingsRoute,
} as any)
const AppPoliticalSitesAddRoute = AppPoliticalSitesAddRouteImport.update({
  id: '/political-sites/add',
  path: '/political-sites/add',
  getParentRoute: () => AppRoute,
} as any)
const AppNotificationsAddRoute = AppNotificationsAddRouteImport.update({
  id: '/notifications/add',
  path: '/notifications/add',
  getParentRoute: () => AppRoute,
} as any)
const AppHotelsAddRoute = AppHotelsAddRouteImport.update({
  id: '/hotels/add',
  path: '/hotels/add',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsSettingsProfileRoute =
  AppSettingsSettingsProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AppSettingsSettingsRoute,
  } as any)
const AppSettingsSettingsPreferencesRoute =
  AppSettingsSettingsPreferencesRouteImport.update({
    id: '/preferences',
    path: '/preferences',
    getParentRoute: () => AppSettingsSettingsRoute,
  } as any)
const AppSettingsSettingsPasswordRoute =
  AppSettingsSettingsPasswordRouteImport.update({
    id: '/password',
    path: '/password',
    getParentRoute: () => AppSettingsSettingsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof AppDashboardRouteRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/verify-otp': typeof AuthVerifyOtpRoute
  '/hotels/add': typeof AppHotelsAddRoute
  '/notifications/add': typeof AppNotificationsAddRoute
  '/political-sites/add': typeof AppPoliticalSitesAddRoute
  '/settings': typeof AppSettingsSettingsRouteWithChildren
  '/tourist-attraction/add': typeof AppTouristAttractionAddRoute
  '/travel-blogs/add': typeof AppTravelBlogsAddRoute
  '/user-management/add': typeof AppUserManagementAddRoute
  '/hotels': typeof AppHotelsIndexRoute
  '/notifications': typeof AppNotificationsIndexRoute
  '/political-sites': typeof AppPoliticalSitesIndexRoute
  '/settings/': typeof AppSettingsIndexRoute
  '/tourist-attraction': typeof AppTouristAttractionIndexRoute
  '/travel-blogs': typeof AppTravelBlogsIndexRoute
  '/user-management': typeof AppUserManagementIndexRoute
  '/settings/password': typeof AppSettingsSettingsPasswordRoute
  '/settings/preferences': typeof AppSettingsSettingsPreferencesRoute
  '/settings/profile': typeof AppSettingsSettingsProfileRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof AppDashboardRouteRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/verify-otp': typeof AuthVerifyOtpRoute
  '/hotels/add': typeof AppHotelsAddRoute
  '/notifications/add': typeof AppNotificationsAddRoute
  '/political-sites/add': typeof AppPoliticalSitesAddRoute
  '/settings': typeof AppSettingsIndexRoute
  '/tourist-attraction/add': typeof AppTouristAttractionAddRoute
  '/travel-blogs/add': typeof AppTravelBlogsAddRoute
  '/user-management/add': typeof AppUserManagementAddRoute
  '/hotels': typeof AppHotelsIndexRoute
  '/notifications': typeof AppNotificationsIndexRoute
  '/political-sites': typeof AppPoliticalSitesIndexRoute
  '/tourist-attraction': typeof AppTouristAttractionIndexRoute
  '/travel-blogs': typeof AppTravelBlogsIndexRoute
  '/user-management': typeof AppUserManagementIndexRoute
  '/settings/password': typeof AppSettingsSettingsPasswordRoute
  '/settings/preferences': typeof AppSettingsSettingsPreferencesRoute
  '/settings/profile': typeof AppSettingsSettingsProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/dashboard': typeof AppDashboardRouteRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_auth/verify-otp': typeof AuthVerifyOtpRoute
  '/_app/hotels/add': typeof AppHotelsAddRoute
  '/_app/notifications/add': typeof AppNotificationsAddRoute
  '/_app/political-sites/add': typeof AppPoliticalSitesAddRoute
  '/_app/settings': typeof AppSettingsRouteWithChildren
  '/_app/settings/_settings': typeof AppSettingsSettingsRouteWithChildren
  '/_app/tourist-attraction/add': typeof AppTouristAttractionAddRoute
  '/_app/travel-blogs/add': typeof AppTravelBlogsAddRoute
  '/_app/user-management/add': typeof AppUserManagementAddRoute
  '/_app/hotels/': typeof AppHotelsIndexRoute
  '/_app/notifications/': typeof AppNotificationsIndexRoute
  '/_app/political-sites/': typeof AppPoliticalSitesIndexRoute
  '/_app/settings/': typeof AppSettingsIndexRoute
  '/_app/tourist-attraction/': typeof AppTouristAttractionIndexRoute
  '/_app/travel-blogs/': typeof AppTravelBlogsIndexRoute
  '/_app/user-management/': typeof AppUserManagementIndexRoute
  '/_app/settings/_settings/password': typeof AppSettingsSettingsPasswordRoute
  '/_app/settings/_settings/preferences': typeof AppSettingsSettingsPreferencesRoute
  '/_app/settings/_settings/profile': typeof AppSettingsSettingsProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/verify-otp'
    | '/hotels/add'
    | '/notifications/add'
    | '/political-sites/add'
    | '/settings'
    | '/tourist-attraction/add'
    | '/travel-blogs/add'
    | '/user-management/add'
    | '/hotels'
    | '/notifications'
    | '/political-sites'
    | '/settings/'
    | '/tourist-attraction'
    | '/travel-blogs'
    | '/user-management'
    | '/settings/password'
    | '/settings/preferences'
    | '/settings/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/verify-otp'
    | '/hotels/add'
    | '/notifications/add'
    | '/political-sites/add'
    | '/settings'
    | '/tourist-attraction/add'
    | '/travel-blogs/add'
    | '/user-management/add'
    | '/hotels'
    | '/notifications'
    | '/political-sites'
    | '/tourist-attraction'
    | '/travel-blogs'
    | '/user-management'
    | '/settings/password'
    | '/settings/preferences'
    | '/settings/profile'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/dashboard'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/reset-password'
    | '/_auth/verify-otp'
    | '/_app/hotels/add'
    | '/_app/notifications/add'
    | '/_app/political-sites/add'
    | '/_app/settings'
    | '/_app/settings/_settings'
    | '/_app/tourist-attraction/add'
    | '/_app/travel-blogs/add'
    | '/_app/user-management/add'
    | '/_app/hotels/'
    | '/_app/notifications/'
    | '/_app/political-sites/'
    | '/_app/settings/'
    | '/_app/tourist-attraction/'
    | '/_app/travel-blogs/'
    | '/_app/user-management/'
    | '/_app/settings/_settings/password'
    | '/_app/settings/_settings/preferences'
    | '/_app/settings/_settings/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_auth/verify-otp': {
      id: '/_auth/verify-otp'
      path: '/verify-otp'
      fullPath: '/verify-otp'
      preLoaderRoute: typeof AuthVerifyOtpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/user-management/': {
      id: '/_app/user-management/'
      path: '/user-management'
      fullPath: '/user-management'
      preLoaderRoute: typeof AppUserManagementIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/travel-blogs/': {
      id: '/_app/travel-blogs/'
      path: '/travel-blogs'
      fullPath: '/travel-blogs'
      preLoaderRoute: typeof AppTravelBlogsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/tourist-attraction/': {
      id: '/_app/tourist-attraction/'
      path: '/tourist-attraction'
      fullPath: '/tourist-attraction'
      preLoaderRoute: typeof AppTouristAttractionIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/settings/': {
      id: '/_app/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AppSettingsIndexRouteImport
      parentRoute: typeof AppSettingsRoute
    }
    '/_app/political-sites/': {
      id: '/_app/political-sites/'
      path: '/political-sites'
      fullPath: '/political-sites'
      preLoaderRoute: typeof AppPoliticalSitesIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/notifications/': {
      id: '/_app/notifications/'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof AppNotificationsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/hotels/': {
      id: '/_app/hotels/'
      path: '/hotels'
      fullPath: '/hotels'
      preLoaderRoute: typeof AppHotelsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/user-management/add': {
      id: '/_app/user-management/add'
      path: '/user-management/add'
      fullPath: '/user-management/add'
      preLoaderRoute: typeof AppUserManagementAddRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/travel-blogs/add': {
      id: '/_app/travel-blogs/add'
      path: '/travel-blogs/add'
      fullPath: '/travel-blogs/add'
      preLoaderRoute: typeof AppTravelBlogsAddRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/tourist-attraction/add': {
      id: '/_app/tourist-attraction/add'
      path: '/tourist-attraction/add'
      fullPath: '/tourist-attraction/add'
      preLoaderRoute: typeof AppTouristAttractionAddRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/settings/_settings': {
      id: '/_app/settings/_settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsSettingsRouteImport
      parentRoute: typeof AppSettingsRoute
    }
    '/_app/political-sites/add': {
      id: '/_app/political-sites/add'
      path: '/political-sites/add'
      fullPath: '/political-sites/add'
      preLoaderRoute: typeof AppPoliticalSitesAddRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/notifications/add': {
      id: '/_app/notifications/add'
      path: '/notifications/add'
      fullPath: '/notifications/add'
      preLoaderRoute: typeof AppNotificationsAddRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/hotels/add': {
      id: '/_app/hotels/add'
      path: '/hotels/add'
      fullPath: '/hotels/add'
      preLoaderRoute: typeof AppHotelsAddRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/settings/_settings/profile': {
      id: '/_app/settings/_settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AppSettingsSettingsProfileRouteImport
      parentRoute: typeof AppSettingsSettingsRoute
    }
    '/_app/settings/_settings/preferences': {
      id: '/_app/settings/_settings/preferences'
      path: '/preferences'
      fullPath: '/settings/preferences'
      preLoaderRoute: typeof AppSettingsSettingsPreferencesRouteImport
      parentRoute: typeof AppSettingsSettingsRoute
    }
    '/_app/settings/_settings/password': {
      id: '/_app/settings/_settings/password'
      path: '/password'
      fullPath: '/settings/password'
      preLoaderRoute: typeof AppSettingsSettingsPasswordRouteImport
      parentRoute: typeof AppSettingsSettingsRoute
    }
  }
}

interface AppSettingsSettingsRouteChildren {
  AppSettingsSettingsPasswordRoute: typeof AppSettingsSettingsPasswordRoute
  AppSettingsSettingsPreferencesRoute: typeof AppSettingsSettingsPreferencesRoute
  AppSettingsSettingsProfileRoute: typeof AppSettingsSettingsProfileRoute
}

const AppSettingsSettingsRouteChildren: AppSettingsSettingsRouteChildren = {
  AppSettingsSettingsPasswordRoute: AppSettingsSettingsPasswordRoute,
  AppSettingsSettingsPreferencesRoute: AppSettingsSettingsPreferencesRoute,
  AppSettingsSettingsProfileRoute: AppSettingsSettingsProfileRoute,
}

const AppSettingsSettingsRouteWithChildren =
  AppSettingsSettingsRoute._addFileChildren(AppSettingsSettingsRouteChildren)

interface AppSettingsRouteChildren {
  AppSettingsSettingsRoute: typeof AppSettingsSettingsRouteWithChildren
  AppSettingsIndexRoute: typeof AppSettingsIndexRoute
}

const AppSettingsRouteChildren: AppSettingsRouteChildren = {
  AppSettingsSettingsRoute: AppSettingsSettingsRouteWithChildren,
  AppSettingsIndexRoute: AppSettingsIndexRoute,
}

const AppSettingsRouteWithChildren = AppSettingsRoute._addFileChildren(
  AppSettingsRouteChildren,
)

interface AppRouteChildren {
  AppDashboardRouteRoute: typeof AppDashboardRouteRoute
  AppHotelsAddRoute: typeof AppHotelsAddRoute
  AppNotificationsAddRoute: typeof AppNotificationsAddRoute
  AppPoliticalSitesAddRoute: typeof AppPoliticalSitesAddRoute
  AppSettingsRoute: typeof AppSettingsRouteWithChildren
  AppTouristAttractionAddRoute: typeof AppTouristAttractionAddRoute
  AppTravelBlogsAddRoute: typeof AppTravelBlogsAddRoute
  AppUserManagementAddRoute: typeof AppUserManagementAddRoute
  AppHotelsIndexRoute: typeof AppHotelsIndexRoute
  AppNotificationsIndexRoute: typeof AppNotificationsIndexRoute
  AppPoliticalSitesIndexRoute: typeof AppPoliticalSitesIndexRoute
  AppTouristAttractionIndexRoute: typeof AppTouristAttractionIndexRoute
  AppTravelBlogsIndexRoute: typeof AppTravelBlogsIndexRoute
  AppUserManagementIndexRoute: typeof AppUserManagementIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRouteRoute: AppDashboardRouteRoute,
  AppHotelsAddRoute: AppHotelsAddRoute,
  AppNotificationsAddRoute: AppNotificationsAddRoute,
  AppPoliticalSitesAddRoute: AppPoliticalSitesAddRoute,
  AppSettingsRoute: AppSettingsRouteWithChildren,
  AppTouristAttractionAddRoute: AppTouristAttractionAddRoute,
  AppTravelBlogsAddRoute: AppTravelBlogsAddRoute,
  AppUserManagementAddRoute: AppUserManagementAddRoute,
  AppHotelsIndexRoute: AppHotelsIndexRoute,
  AppNotificationsIndexRoute: AppNotificationsIndexRoute,
  AppPoliticalSitesIndexRoute: AppPoliticalSitesIndexRoute,
  AppTouristAttractionIndexRoute: AppTouristAttractionIndexRoute,
  AppTravelBlogsIndexRoute: AppTravelBlogsIndexRoute,
  AppUserManagementIndexRoute: AppUserManagementIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthVerifyOtpRoute: typeof AuthVerifyOtpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthVerifyOtpRoute: AuthVerifyOtpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
